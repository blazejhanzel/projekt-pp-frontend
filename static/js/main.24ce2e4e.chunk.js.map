{"version":3,"sources":["components/AddThreadForm.js","components/HerokuWait.js","components/Item.js","components/Post.js","components/Posts.js","components/RegisterForm.js","components/Sections.js","components/PopularItem.js","components/Sidebar.js","components/Threads.js","App.js","reportWebVitals.js","index.js","libraries/Cookie.js"],"names":["AddThreadForm","props","useState","sections","setSections","selectedValue","setSelectedValue","useEffect","fetch","method","credentials","headers","getCookie","then","res","json","data","status","result","section","push","value","id","name","onChange","e","target","type","placeholder","onClick","post_name","document","getElementById","post_description","body","JSON","stringify","alert","HerokuWait","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","setPage","PageEnum","home","open","send","className","Item","title","author","description","Post","createDate","slice","replace","Topics","topics","setTopics","addPost","threadId","thread","post","text","login","setSectionName","sectionName","threadName","threadDescription","threadAuthor","console","log","userLogged","RegisterForm","response","location","reload","Sections","setSectionId","PopularItem","Sidebar","logged","login_button_text","setLoginButtonText","username","decodeToken","sub","threads","setThreads","setUserLogged","logout","setCookie","openAddThreadForm","add_thread","openRegisterPage","register","openThread","signin","a","jwt","setTimeout","page","style","marginTop","height","count","Threads","closeSection","sectionId","setThreadId","setThreadName","setThreadDescription","setThreadAuthor","App","Object","freeze","heroku_wait","Posts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports","cname","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","cvalue","exhours","d","Date","setTime","getTime","expires","toUTCString"],"mappings":"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","file":"static/js/main.24ce2e4e.chunk.js","sourcesContent":["import { render } from '@testing-library/react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction AddThreadForm(props) {\r\n    const [sections, setSections] = useState([])\r\n    const [selectedValue, setSelectedValue] = useState(null);\r\n \r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/section/\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let section of data) {\r\n                    result.push(<option value={section.id}>{section.name}</option>)\r\n                }\r\n                setSections(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedValue(e.target.value)\r\n    }\r\n    \r\n    const addTopic = () => {\r\n        if (selectedValue == null) return\r\n\r\n        let post_name = document.getElementById(\"topic_field\").value\r\n        let post_description = document.getElementById(\"description\").value\r\n\r\n        if (post_name && post_description) {\r\n            let json = {\r\n                \"title\": post_name,\r\n                \"description\": post_description\r\n            }\r\n\r\n            fetch(`https://projekt-pp-backend.herokuapp.com/section/${selectedValue}/topic`, {\r\n                method: 'POST',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n                },\r\n                body: JSON.stringify(json)\r\n            }).then(res => res.json().then(data => {\r\n                if (res.status == 200) {\r\n                    alert(\"Wątek dodano pomyślnie!\")\r\n                } else {\r\n                    alert(res.status)\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"addThreadForm\">\r\n            <select id=\"section\" name=\"sections\" onChange={handleChange}>\r\n                <option value=\"null\">Wybierz sekcję</option>\r\n                {sections}\r\n            </select>\r\n            <input type=\"text\" id=\"topic_field\" placeholder=\"Nazwa tematu\" />\r\n            <textarea id=\"description\"></textarea>\r\n            <button type=\"button\" onClick={addTopic}>Dodaj wątek</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddThreadForm\r\n","import './HerokuWait.css'\r\nimport React from 'react';\r\n\r\nfunction HerokuWait(props) {\r\n    const url = \"https://projekt-pp-backend.herokuapp.com/swagger-ui.html\"\r\n\r\n    var xhttp = new XMLHttpRequest()\r\n    xhttp.onreadystatechange = function() {\r\n        if (this.readyState == 4) {\r\n            props.setPage(props.PageEnum.home)\r\n        }\r\n    }\r\n\r\n    xhttp.open(\"GET\", url, true);\r\n    xhttp.send();\r\n\r\n    return (\r\n        <div id=\"HerokuWait\">\r\n            <div id=\"container\">\r\n                <div id=\"box\">\r\n                    <div className=\"lds-dual-ring\"></div>\r\n                    <h1>Page is being loaded...</h1>\r\n                    <h3>Server is starting, this can take up to one minute...</h3>\r\n                    <h5>Servers are going to sleep automatically when no load is detected to save server resources.</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HerokuWait\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Item(props) {\r\n    return (\r\n        <div className=\"item\">\r\n            {/* \r\n                (() => {\r\n                    if (props.type !== 'section')\r\n                    return <button className=\"small-button\" onClick={() => alert(\"hello!\")}>Usuń</button>\r\n                })()\r\n            */}\r\n            <div>{props.title}</div>\r\n            <div className=\"username\">{props.author && '@' + props.author}</div>\r\n            <div className=\"info\">{props.description}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Post(props) {\r\n    const getDate = () => {\r\n        return props.createDate.slice(0, 19).replace('T', ' ')\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            {/* <button className=\"small-button\" onClick={() => alert(\"hello!\")}>Usuń</button> */}\r\n            <div className=\"username\">\r\n                @{props.author}\r\n            </div>\r\n            <div className=\"info\">{getDate()}</div>\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport Post from './Post'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Topics(props) {\r\n    const [topics, setTopics] = useState([])\r\n\r\n    const addPost = () => {\r\n        let json = {\r\n            \"text\": document.getElementById(\"post_text\").value\r\n        }\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${props.threadId}/post`, {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            },\r\n            body: JSON.stringify(json)\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setPage(props.PageEnum.section)\r\n                props.setPage(props.PageEnum.thread)\r\n            } else {\r\n                alert(res.status)\r\n            }\r\n        }))\r\n    }\r\n\r\n    const closeSection = () => {\r\n        props.setPage(props.PageEnum.home)\r\n        props.setSectionName(\"Ładowanie...\")\r\n    }\r\n\r\n    const closeThread = () => {\r\n        props.setPage(props.PageEnum.section)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${props.threadId}/post`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let post of data) {\r\n                    result.push(<Post title={post.text} author={post.login} createDate={post.createDate} />)\r\n                }\r\n                setTopics(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            <div onClick={closeSection}>\r\n                <Item title={props.sectionName} type=\"section\" />\r\n            </div>\r\n            <div className=\"threads\">\r\n                <div onClick={closeThread}>\r\n                    <Item title={props.threadName} description={props.threadDescription} author={props.threadAuthor} type=\"topic\" />\r\n                </div>\r\n                <div className=\"topics\">\r\n                    {topics}\r\n                </div>\r\n            </div>\r\n            {\r\n                (() => {\r\n                    console.log(props.userLogged)\r\n                    if (props.userLogged != 'unknown') {\r\n                        return (\r\n                            <div id=\"addThreadForm\">\r\n                                <textarea id=\"post_text\"></textarea>\r\n                                <button type=\"button\" onClick={addPost}>Dodaj odpowiedź</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topics\r\n","import '../App.css'\r\nimport React, { useState } from 'react';\r\n\r\nfunction RegisterForm() {\r\n\r\n    const registerUser = () => {\r\n        let data = {\r\n            \"username\": document.getElementById(\"login_field\").value,\r\n            \"password\": document.getElementById(\"password_field\").value,\r\n            \"email\": document.getElementById(\"email_form\").value\r\n        }\r\n\r\n        \r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/register\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json().then(data => {\r\n                if (response.status === 200) {\r\n                document.location.reload()\r\n                alert(\"Możesz się zalogować\")\r\n            } else {\r\n                alert(response.status)\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div id=\"registerForm\">\r\n            <input type=\"text\" id=\"login_field\" placeholder=\"login\" />\r\n            <input type=\"password\" id=\"password_field\" placeholder=\"hasło\" />\r\n            <input type=\"text\" id=\"email_form\" placeholder=\"email\" />\r\n            <button type=\"button\" onClick={registerUser}>Zarejestruj</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Sections(props) {\r\n    const [sections, setSections] = useState([])\r\n\r\n    const openSection = (id) => {\r\n        fetch('https://projekt-pp-backend.herokuapp.com/section/' + id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setSectionId(id)\r\n                props.setPage(props.PageEnum.section)\r\n                props.setSectionName(data.name)\r\n            }\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/section/\", {\r\n            method: 'GET'\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let section of data) {\r\n                    result.push(<div onClick={() => openSection(section.id)}><Item title={section.name} type=\"section\" /></div>)\r\n                }\r\n                setSections(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            {sections}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sections\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction PopularItem(props) {\r\n    return (\r\n        <div className=\"popularItem\">\r\n            <div>{props.title}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularItem\r\n","import './Sidebar.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { isExpired, decodeToken } from 'react-jwt'\r\nimport { getCookie, setCookie } from '../libraries/Cookie'\r\nimport PopularItem from './PopularItem'\r\nimport Post from './Post'\r\n\r\nfunction Sidebar(props) {\r\n    const [logged, setLogged] = useState(getCookie(\"jwt\"))\r\n    const [login_button_text, setLoginButtonText] = useState(\"Zaloguj\")\r\n    const username = ((logged) ? decodeToken(getCookie(\"jwt\")).sub : \"unknown\")\r\n    const [threads, setThreads] = useState([])\r\n\r\n    useEffect(() => {\r\n        props.setUserLogged(username)\r\n    })\r\n\r\n    const logout = () => {\r\n        setCookie(\"jwt\", \"\", -1)\r\n        document.location.reload()\r\n    }\r\n\r\n    const openAddThreadForm = () => {\r\n        props.setPage(props.PageEnum.add_thread)\r\n    }\r\n\r\n    const openRegisterPage = () => {\r\n        props.setPage(props.PageEnum.register)\r\n    }\r\n\r\n    const getPopularTopics = () => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/mostPopularTopics/1\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                let count = 0\r\n                for (let thread of data) {\r\n                    count++\r\n                    result.push(\r\n                        <div onClick={() => openThread(thread.id)}>\r\n                            <PopularItem title={thread.title}   />\r\n                        </div>\r\n                        )\r\n                    if(count>4)\r\n                        break\r\n                }\r\n                setThreads(result)\r\n            }\r\n        }))\r\n    }\r\n\r\n    const openThread = (id) => {\r\n        \r\n    }\r\n\r\n    const signin = async () => {\r\n        setLoginButtonText(\"Logowanie...\")\r\n\r\n        let data = {\r\n            \"username\": document.getElementById(\"login_field\").value,\r\n            \"password\": document.getElementById(\"password_field\").value\r\n        }\r\n\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/login\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json().then(data => {\r\n            if (response.status === 200) {\r\n                setCookie(\"jwt\", data.jwt, 10)\r\n                document.location.reload()\r\n            } else {\r\n                setLoginButtonText(`Błąd ${response.status}`)\r\n                setTimeout(() => { setLoginButtonText('Zaloguj') }, 3000);\r\n            }\r\n        }))\r\n    }\r\n\r\n    const returnToHomePage = () => {\r\n        props.setPage(props.PageEnum.home)\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            {(() => {\r\n                if (props.page != props.PageEnum.register) {\r\n                    if (logged) return (\r\n                        <div id=\"login_form\">\r\n                            <p>@{username}</p>\r\n                            <button type=\"button\" onClick={logout}>Wyloguj</button>\r\n                        </div>\r\n                    ) \r\n                    else return (\r\n                        <div id=\"login_form\">\r\n                            <input type=\"text\" id=\"login_field\" placeholder=\"login\" /><br />\r\n                            <input type=\"password\" id=\"password_field\" placeholder=\"hasło\" />\r\n                            <button type=\"button\" onClick={signin}>{login_button_text}</button>\r\n                            <button type=\"button\" onClick={openRegisterPage}>Zarejestruj</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            })()}\r\n            {/* <input type=\"text\" id=\"search_form\" placeholder=\"wyszukaj\" /> */}\r\n            <div style={{marginTop: 100 + 'px', height: 1 + 'px'}}></div>\r\n            <button style={{marginTop: 100 + 'px!important'}} type=\"button\" className=\"wide_button\" onClick={getPopularTopics}>Najpopularniejsze tematy</button>\r\n            \r\n            <div className=\"popularThreads\">\r\n                {threads}\r\n            </div>\r\n            \r\n            {\r\n            (() => {\r\n                if (username !== 'unknown') {\r\n                    return (\r\n                        <button type=\"button\" className=\"wide_button\" onClick={openAddThreadForm}>Dodaj wątek</button>\r\n                    )\r\n                }\r\n            })()\r\n            }\r\n            <button type=\"button\" className=\"wide_button\" onClick={returnToHomePage}>Strona Główna</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Threads(props) {\r\n    const [threads, setThreads] = useState([])\r\n\r\n    const closeSection = () => {\r\n        props.setPage(props.PageEnum.home)\r\n        props.setSectionName(\"Ładowanie...\")\r\n    }\r\n\r\n    const openThread = (id) => {\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/section/${props.sectionId}/topic/${id}`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setThreadId(id)\r\n                props.setPage(props.PageEnum.thread)\r\n                props.setThreadName(data.title)\r\n                props.setThreadDescription(data.description)\r\n                props.setThreadAuthor(data.login)\r\n            }\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/section/${props.sectionId}/topic`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let thread of data) {\r\n                    result.push(\r\n                        <div onClick={() => openThread(thread.id)}>\r\n                            <Item title={thread.title} closeSection={closeSection} description={thread.description} author={thread.login} type=\"topic\" />\r\n                        </div>\r\n                        )\r\n                }\r\n                setThreads(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            <div onClick={closeSection}>\r\n                <Item title={props.sectionName} type=\"section\" />\r\n            </div>\r\n            <div className=\"threads\">\r\n                {threads}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Threads\r\n","import './App.css'\r\nimport React, { useState } from 'react'\r\nimport AddThreadForm from './components/AddThreadForm'\r\nimport HerokuWait from './components/HerokuWait'\r\nimport Posts from './components/Posts'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport Sections from './components/Sections'\r\nimport Sidebar from './components/Sidebar'\r\nimport Threads from './components/Threads'\r\n\r\nfunction App() {\r\n  const PageEnum = Object.freeze({\r\n    \"heroku_wait\": 0,\r\n    \"home\": 1,\r\n    \"register\": 2,\r\n    \"section\": 3,\r\n    \"thread\": 4,\r\n    \"add_thread\": 5\r\n  })\r\n\r\n  const [page, setPage] = useState(PageEnum.heroku_wait)\r\n  const [sectionId, setSectionId] = useState(0)\r\n  const [sectionName, setSectionName] = useState(\"Wczytywanie...\")\r\n  const [threadName, setThreadName] = useState(\"Wczytywanie...\")\r\n  const [threadDescription, setThreadDescription] = useState(\"Wczytywanie...\")\r\n  const [threadAuthor, setThreadAuthor] = useState(\"Wczytywanie...\")\r\n  const [threadId, setThreadId] = useState(0)\r\n  const [userLogged, setUserLogged] = useState('unknown')\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Sidebar page={page} setPage={setPage} PageEnum={PageEnum} setUserLogged={setUserLogged} />\r\n      <div className=\"container\">\r\n        {        \r\n          (() => {\r\n            switch (page) {\r\n              case PageEnum.heroku_wait:\r\n                return <HerokuWait setPage={setPage} PageEnum={PageEnum} />\r\n              case PageEnum.home:\r\n                return <Sections setPage={setPage} PageEnum={PageEnum} setSectionId={setSectionId} setSectionName={setSectionName} />\r\n              case PageEnum.register:\r\n                return <RegisterForm />\r\n              case PageEnum.section:\r\n                return <Threads setPage={setPage} PageEnum={PageEnum} sectionName={sectionName} sectionId={sectionId}\r\n                  setSectionName={setSectionName} setThreadName={setThreadName} setThreadDescription={setThreadDescription}\r\n                  setThreadAuthor={setThreadAuthor} setThreadId={setThreadId} />\r\n              case PageEnum.thread:\r\n                return <Posts setPage={setPage} PageEnum={PageEnum} sectionName={sectionName}\r\n                  setSectionName={setSectionName} threadName={threadName} threadDescription={threadDescription}\r\n                  threadAuthor={threadAuthor} threadId={threadId} userLogged={userLogged} />\r\n              case PageEnum.add_thread:\r\n                return <AddThreadForm />\r\n            }\r\n          })()\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports.getCookie = (cname) => {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nmodule.exports.setCookie = (cname, cvalue, exhours) => {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exhours*60*60*1000));\r\n    var expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n"],"sourceRoot":""}