{"version":3,"sources":["components/AddThreadForm.js","components/HerokuWait.js","components/Item.js","components/Post.js","components/Posts.js","components/RegisterForm.js","components/Sections.js","components/PopularItem.js","components/Sidebar.js","components/Threads.js","App.js","reportWebVitals.js","index.js","libraries/Cookie.js"],"names":["AddThreadForm","props","useState","sections","setSections","useEffect","fetch","method","credentials","headers","getCookie","then","res","json","data","status","result","section","push","value","id","name","type","placeholder","HerokuWait","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","setPage","PageEnum","home","open","send","className","Item","title","author","description","Post","createDate","slice","replace","Topics","topics","setTopics","post","text","login","onClick","setSectionName","sectionName","threadName","threadDescription","threadAuthor","RegisterForm","Sections","PopularItem","Sidebar","logged","login_button_text","setLoginButtonText","username","decodeToken","sub","threads","setThreads","logout","setCookie","document","location","reload","openRegisterPage","register","openThread","thread","setThreadName","setThreadDescription","setThreadAuthor","signin","a","getElementById","body","JSON","stringify","response","jwt","alert","page","count","add_thread","Threads","closeSection","App","Object","freeze","heroku_wait","Posts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports","cname","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","cvalue","exhours","d","Date","setTime","getTime","expires","toUTCString"],"mappings":"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","file":"static/js/main.274c2901.chunk.js","sourcesContent":["import { render } from '@testing-library/react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction AddThreadForm(props) {\r\n    const [sections, setSections] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/section\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let section of data) {\r\n                    result.push(<option value={section.id}>{section.name}</option>)\r\n                }\r\n                setSections(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"addThreadForm\">\r\n            <select id=\"section\" name=\"sections\">\r\n                {sections}\r\n            </select>\r\n            <input type=\"text\" id=\"topic_filed\" placeholder=\"Nazwa tematu\" />\r\n            <textarea></textarea>\r\n            <button type=\"button\">Dodaj wątek</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddThreadForm\r\n","import './HerokuWait.css'\r\nimport React from 'react';\r\n\r\nfunction HerokuWait(props) {\r\n    const url = \"https://projekt-pp-backend.herokuapp.com/swagger-ui.html\"\r\n\r\n    var xhttp = new XMLHttpRequest()\r\n    xhttp.onreadystatechange = function() {\r\n        if (this.readyState == 4) {\r\n            props.setPage(props.PageEnum.home)\r\n        }\r\n    }\r\n\r\n    xhttp.open(\"GET\", url, true);\r\n    xhttp.send();\r\n\r\n    return (\r\n        <div id=\"HerokuWait\">\r\n            <div id=\"container\">\r\n                <div id=\"box\">\r\n                    <div className=\"lds-dual-ring\"></div>\r\n                    <h1>Page is being loaded...</h1>\r\n                    <h3>Server is starting, this can take up to one minute...</h3>\r\n                    <h5>Servers are going to sleep automatically when no load is detected to save server resources.</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HerokuWait\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Item(props) {\r\n    return (\r\n        <div className=\"item\">\r\n            <div>{props.title}</div>\r\n            <div className=\"username\">{props.author && '@' + props.author}</div>\r\n            <div className=\"info\">{props.description}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Post(props) {\r\n    const getDate = () => {\r\n        return props.createDate.slice(0, 19).replace('T', ' ')\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"username\">\r\n                @{props.author}\r\n            </div>\r\n            <div className=\"info\">{getDate()}</div>\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport Post from './Post'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Topics(props) {\r\n    const [topics, setTopics] = useState([])\r\n\r\n    const closeSection = () => {\r\n        props.setPage(props.PageEnum.home)\r\n        props.setSectionName(\"Ładowanie...\")\r\n    }\r\n\r\n    const closeThread = () => {\r\n        props.setPage(props.PageEnum.section)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/post\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let post of data) {\r\n                    result.push(<Post title={post.text} author={post.author.login} createDate={post.createDate} />)\r\n                }\r\n                setTopics(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            <div onClick={closeSection}>\r\n                <Item title={props.sectionName} />\r\n            </div>\r\n            <div className=\"threads\">\r\n                <div onClick={closeThread}>\r\n                    <Item title={props.threadName} description={props.threadDescription} author={props.threadAuthor} />\r\n                </div>\r\n                <div className=\"topics\">\r\n                    {topics}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topics\r\n","import '../App.css'\r\nimport React, { useState } from 'react';\r\n\r\nfunction RegisterForm() {\r\n    return (\r\n        <div id=\"registerForm\">\r\n            <input type=\"text\" id=\"login_field\" placeholder=\"login\" />\r\n            <input type=\"password\" id=\"password_field\" placeholder=\"hasło\" />\r\n            <input type=\"text\" id=\"email_form\" placeholder=\"email\" />\r\n            <button type=\"button\">Zarejestruj</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Sections(props) {\r\n    const [sections, setSections] = useState([])\r\n\r\n    const openSection = (id) => {\r\n        fetch('https://projekt-pp-backend.herokuapp.com/section/' + id, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setPage(props.PageEnum.section)\r\n                props.setSectionName(data.name)\r\n            }\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/section\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let section of data) {\r\n                    result.push(<div onClick={() => openSection(section.id)}><Item title={section.name} /></div>)\r\n                }\r\n                setSections(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            {sections}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sections\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction PopularItem(props) {\r\n    return (\r\n        <div className=\"popularItem\">\r\n            <div>{props.title}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularItem\r\n","import './Sidebar.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { isExpired, decodeToken } from 'react-jwt'\r\nimport { getCookie, setCookie } from '../libraries/Cookie'\r\nimport PopularItem from './PopularItem'\r\nimport Post from './Post'\r\n\r\nfunction Sidebar(props) {\r\n    const [logged, setLogged] = useState(getCookie(\"jwt\"))\r\n    const [login_button_text, setLoginButtonText] = useState(\"Zaloguj\")\r\n    const username = ((logged) ? decodeToken(getCookie(\"jwt\")).sub : \"unknown\")\r\n    const [threads, setThreads] = useState([])\r\n\r\n    const logout = () => {\r\n        setCookie(\"jwt\", \"\", -1)\r\n        document.location.reload()\r\n    }\r\n\r\n    const openAddThreadForm = () => {\r\n        props.setPage(props.PageEnum.add_thread)\r\n    }\r\n\r\n    const openRegisterPage = () => {\r\n        props.setPage(props.PageEnum.register)\r\n    }\r\n\r\n    const getPopularTopics = () => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/mostPopularTopics/0\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                let count = 0\r\n                for (let thread of data) {\r\n                    count++\r\n                    result.push(\r\n                        <div onClick={() => openThread(thread.id)}>\r\n                            <PopularItem title={thread.title}   />\r\n                        </div>\r\n                        )\r\n                    if(count>4)\r\n                        break\r\n                }\r\n                setThreads(result)\r\n            }\r\n        }))\r\n    }\r\n    const openThread = (id) => {\r\n        fetch('https://projekt-pp-backend.herokuapp.com/topic/' + id, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setPage(props.PageEnum.thread)\r\n                props.setThreadName(data.title)\r\n                props.setThreadDescription(data.description)\r\n                props.setThreadAuthor(data.author.login)\r\n            }\r\n        }))\r\n    }\r\n\r\n    const signin = async () => {\r\n        setLoginButtonText(\"Logowanie...\")\r\n\r\n        let data = {\r\n            \"username\": document.getElementById(\"login_field\").value,\r\n            \"password\": document.getElementById(\"password_field\").value\r\n        }\r\n\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/login\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json().then(data => {\r\n                if (response.status === 200) {\r\n                setCookie(\"jwt\", data.jwt, 10)\r\n                document.location.reload()\r\n            } else {\r\n                alert(response.status)\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            {(() => {\r\n                if (props.page != props.PageEnum.register) {\r\n                    if (logged) return (\r\n                        <div id=\"login_form\">\r\n                            <p>@{username}</p>\r\n                            <button type=\"button\" onClick={logout}>Wyloguj</button>\r\n                        </div>\r\n                    ) \r\n                    else return (\r\n                        <div id=\"login_form\">\r\n                            <input type=\"text\" id=\"login_field\" placeholder=\"login\" /><br />\r\n                            <input type=\"password\" id=\"password_field\" placeholder=\"hasło\" />\r\n                            <button type=\"button\" onClick={signin}>{login_button_text}</button>\r\n                            <button type=\"button\" onClick={openRegisterPage}>Zarejestruj</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            })()}\r\n            <input type=\"text\" id=\"search_form\" placeholder=\"wyszukaj\" />\r\n            <button type=\"button\" className=\"wide_button\" onClick={getPopularTopics}>Najpopularniejsze tematy</button>\r\n            \r\n            <div className=\"popularThreads\">\r\n                {threads}\r\n            </div>\r\n            \r\n            <button type=\"button\" className=\"wide_button\" onClick={openAddThreadForm}>Dodaj wątek</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Threads(props) {\r\n    const [threads, setThreads] = useState([])\r\n\r\n    const closeSection = () => {\r\n        props.setPage(props.PageEnum.home)\r\n        props.setSectionName(\"Ładowanie...\")\r\n    }\r\n\r\n    const openThread = (id) => {\r\n        fetch('https://projekt-pp-backend.herokuapp.com/topic/' + id, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setPage(props.PageEnum.thread)\r\n                props.setThreadName(data.title)\r\n                props.setThreadDescription(data.description)\r\n                props.setThreadAuthor(data.author.login)\r\n            }\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/topic\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let thread of data) {\r\n                    result.push(\r\n                        <div onClick={() => openThread(thread.id)}>\r\n                            <Item title={thread.title} closeSection={closeSection} description={thread.description} author={thread.author.login} />\r\n                        </div>\r\n                        )\r\n                }\r\n                setThreads(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            <div onClick={closeSection}>\r\n                <Item title={props.sectionName}/>\r\n            </div>\r\n            <div className=\"threads\">\r\n                {threads}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Threads\r\n","import './App.css'\r\nimport React, { useState } from 'react'\r\nimport AddThreadForm from './components/AddThreadForm'\r\nimport HerokuWait from './components/HerokuWait'\r\nimport Posts from './components/Posts'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport Sections from './components/Sections'\r\nimport Sidebar from './components/Sidebar'\r\nimport Threads from './components/Threads'\r\n\r\nfunction App() {\r\n  const PageEnum = Object.freeze({\r\n    \"heroku_wait\": 0,\r\n    \"home\": 1,\r\n    \"register\": 2,\r\n    \"section\": 3,\r\n    \"thread\": 4,\r\n    \"add_thread\": 5\r\n  })\r\n\r\n  const [page, setPage] = useState(PageEnum.heroku_wait)\r\n  const [sectionName, setSectionName] = useState(\"Wczytywanie...\")\r\n  const [threadName, setThreadName] = useState(\"Wczytywanie...\")\r\n  const [threadDescription, setThreadDescription] = useState(\"Wczytywanie...\")\r\n  const [threadAuthor, setThreadAuthor] = useState(\"Wczytywanie...\")\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Sidebar page={page} setPage={setPage} PageEnum={PageEnum} />\r\n      <div className=\"container\">\r\n        {        \r\n          (() => {\r\n            switch (page) {\r\n              case PageEnum.heroku_wait:\r\n                return <HerokuWait setPage={setPage} PageEnum={PageEnum} />\r\n              case PageEnum.home:\r\n                return <Sections setPage={setPage} PageEnum={PageEnum} setSectionName={setSectionName} />\r\n              case PageEnum.register:\r\n                return <RegisterForm />\r\n              case PageEnum.section:\r\n                return <Threads setPage={setPage} PageEnum={PageEnum} sectionName={sectionName}\r\n                  setSectionName={setSectionName} setThreadName={setThreadName} setThreadDescription={setThreadDescription}\r\n                  setThreadAuthor={setThreadAuthor} />\r\n              case PageEnum.thread:\r\n                return <Posts setPage={setPage} PageEnum={PageEnum} sectionName={sectionName}\r\n                  setSectionName={setSectionName} threadName={threadName} threadDescription={threadDescription}\r\n                  threadAuthor={threadAuthor} />\r\n              case PageEnum.add_thread:\r\n                return <AddThreadForm />\r\n            }\r\n          })()\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports.getCookie = (cname) => {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nmodule.exports.setCookie = (cname, cvalue, exhours) => {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exhours*60*60*1000));\r\n    var expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n"],"sourceRoot":""}