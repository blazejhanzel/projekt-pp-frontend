{"version":3,"sources":["libraries/Cookie.js","components/AddThreadForm.js","components/AddSectionForm.js","components/HerokuWait.js","components/Item.js","components/Post.js","components/Posts.js","components/RegisterForm.js","components/Sections.js","components/PopularItem.js","components/OpenedThreadPage.js","components/Sidebar.js","components/Threads.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","getCookie","cname","name","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","setCookie","cvalue","exhours","d","Date","setTime","getTime","expires","toUTCString","AddThreadForm","props","useState","sections","setSections","selectedValue","setSelectedValue","useEffect","fetch","method","credentials","headers","then","res","json","data","status","result","section","push","value","id","onChange","e","target","type","placeholder","onClick","post_name","getElementById","post_description","body","JSON","stringify","alert","window","location","reload","AddSectionForm","section_name","HerokuWait","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","setPage","PageEnum","home","open","send","className","Item","decodeToken","author","sub","postRole","title","description","Post","role","createDate","slice","replace","Topics","topics","setTopics","addPost","threadId","thread","authority","post","text","login","ok","setSectionName","sectionName","threadName","threadDescription","threadAuthor","console","log","userLogged","RegisterForm","response","Sections","setSectionId","PopularItem","OpenedThreadPage","setPopularPosts","popularPosts","Sidebar","logged","login_button_text","setLoginButtonText","username","threads","setThreads","setUserLogged","getPopularTopics","logout","openAddThreadForm","add_thread","openAddSectionForm","add_section","openRegisterPage","register","count","openThread","deletePost","setThreadName","setThreadDescription","setThreadAuthor","setThreadId","opened_thread","signin","a","jwt","setTimeout","page","style","marginTop","height","Threads","closeSection","sectionId","App","Object","freeze","heroku_wait","Posts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da6d5521.chunk.js","sourcesContent":["module.exports.getCookie = (cname) => {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nmodule.exports.setCookie = (cname, cvalue, exhours) => {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exhours*60*60*1000));\r\n    var expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n","import { render } from '@testing-library/react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction AddThreadForm(props) {\r\n    const [sections, setSections] = useState([])\r\n    const [selectedValue, setSelectedValue] = useState(null);\r\n \r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/section/\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let section of data) {\r\n                    result.push(<option value={section.id}>{section.name}</option>)\r\n                }\r\n                setSections(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedValue(e.target.value)\r\n    }\r\n    \r\n    const addTopic = () => {\r\n        if (selectedValue == null) return\r\n\r\n        let post_name = document.getElementById(\"topic_field\").value\r\n        let post_description = document.getElementById(\"description\").value\r\n\r\n        if (post_name && post_description) {\r\n            let json = {\r\n                \"title\": post_name,\r\n                \"description\": post_description\r\n            }\r\n\r\n            fetch(`https://projekt-pp-backend.herokuapp.com/section/${selectedValue}/topic`, {\r\n                method: 'POST',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n                },\r\n                body: JSON.stringify(json)\r\n            }).then(res => res.json().then(data => {\r\n                if (res.status == 200) {\r\n                    alert(\"Temat dodano pomyślnie!\")\r\n                    window.location.reload()\r\n                } else {\r\n                    alert(res.status)\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"addThreadForm\">\r\n            <select id=\"section\" name=\"sections\" onChange={handleChange}>\r\n                <option value=\"null\">Wybierz sekcję</option>\r\n                {sections}\r\n            </select>\r\n            <input type=\"text\" id=\"topic_field\" placeholder=\"Nazwa tematu\" />\r\n            <textarea id=\"description\"></textarea>\r\n            <button type=\"button\" onClick={addTopic}>Dodaj temat</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddThreadForm\r\n","import { render } from '@testing-library/react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction AddSectionForm(props) {\r\n    \r\n    \r\n    const addSection = () => {\r\n\r\n        let section_name = document.getElementById(\"section_field\").value\r\n        if (section_name) {\r\n            let json = {\r\n                \"name\": section_name,\r\n                \"moderatorId\": \"60cbac661c37770501af8599\"\r\n                \r\n            }\r\n\r\n            fetch(`https://projekt-pp-backend.herokuapp.com/section`, {\r\n                method: 'POST',\r\n                credentials: 'same-origin',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n                },\r\n                body: JSON.stringify(json)\r\n            }).then(res => res.json().then(data => {\r\n                if (res.status == 200) {\r\n                    alert(\"Sekcje dodano pomyślnie!\")\r\n                } else {\r\n                    alert(res.status)\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"addThreadForm\">\r\n            <input type=\"text\" id=\"section_field\" placeholder=\"Nazwa sekcji\" />\r\n            <button type=\"button\" onClick={addSection}>Dodaj sekcje</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddSectionForm","import './HerokuWait.css'\r\nimport React from 'react';\r\n\r\nfunction HerokuWait(props) {\r\n    const url = \"https://projekt-pp-backend.herokuapp.com/swagger-ui.html\"\r\n\r\n    var xhttp = new XMLHttpRequest()\r\n    xhttp.onreadystatechange = function() {\r\n        if (this.readyState == 4) {\r\n            props.setPage(props.PageEnum.home)\r\n        }\r\n    }\r\n\r\n    xhttp.open(\"GET\", url, true);\r\n    xhttp.send();\r\n\r\n    return (\r\n        <div id=\"HerokuWait\">\r\n            <div id=\"container\">\r\n                <div id=\"box\">\r\n                    <div className=\"lds-dual-ring\"></div>\r\n                    <h1>Page is being loaded...</h1>\r\n                    <h3>Server is starting, this can take up to one minute...</h3>\r\n                    <h5>Servers are going to sleep automatically when no load is detected to save server resources.</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HerokuWait\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\nimport { getCookie } from '../libraries/Cookie'\r\nimport { decodeToken } from 'react-jwt'\r\n\r\nfunction Item(props) {\r\n    return (\r\n        <div className=\"item\">\r\n              {\r\n            (() => {\r\n                if(decodeToken(getCookie(\"jwt\"))!==null)\r\n                {\r\n                if ((props.author === decodeToken(getCookie(\"jwt\")).sub)||(props.postRole===\"ROLE_ADMIN\")) {\r\n                    return (\r\n                        <button className=\"small-button\" onClick={props.onClick}>Usuń</button>\r\n                    )\r\n                }\r\n             }\r\n            })()\r\n            }\r\n            <div>{props.title}</div>\r\n            <div className=\"username\">{props.author && '@' + props.author}</div>\r\n            <div className=\"info\">{props.description}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\nimport { getCookie } from '../libraries/Cookie'\r\nimport { decodeToken } from 'react-jwt'\r\n\r\nfunction Post(props) {\r\n    const getDate = () => {\r\n        return props.createDate.slice(0, 19).replace('T', ' ')\r\n\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            {\r\n            (() => {\r\n                if(decodeToken(getCookie(\"jwt\"))!==null)\r\n                {\r\n                if ((props.author === decodeToken(getCookie(\"jwt\")).sub)||(props.postRole===\"ROLE_ADMIN\")) {\r\n                    return (\r\n                        <button className=\"small-button\" onClick={props.onClick}>Usuń</button>\r\n                    )\r\n                }\r\n                }\r\n            })()\r\n            }\r\n            <div className=\"username\">\r\n                @{props.author}\r\n            </div>\r\n            <div className=\"info\">{getDate()}</div>\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport Post from './Post'\r\nimport { getCookie } from '../libraries/Cookie'\r\nimport { decodeToken } from 'react-jwt'\r\n\r\nvar role\r\n\r\nfunction Topics(props) {\r\n    const [topics, setTopics] = useState([])\r\n\r\n    const deletePost = (id) => {\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${props.threadId}/post/${id}`, {\r\n            method: 'DELETE',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            },\r\n        }).then(res =>{\r\n            if(!res.ok)\r\n            {\r\n                alert(\"błąd\")\r\n            }\r\n            else\r\n            {\r\n            document.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    const addPost = () => {\r\n        let json = {\r\n            \"text\": document.getElementById(\"post_text\").value\r\n        }\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${props.threadId}/post`, {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            },\r\n            body: JSON.stringify(json)\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setPage(props.PageEnum.section)\r\n                props.setPage(props.PageEnum.thread)\r\n            } else {\r\n                alert(res.status)\r\n            }\r\n        }))\r\n    }\r\n\r\n    const closeSection = () => {\r\n        props.setPage(props.PageEnum.home)\r\n        props.setSectionName(\"Ładowanie...\")\r\n    }\r\n\r\n    const closeThread = () => {\r\n        props.setPage(props.PageEnum.section)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/authorities`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                role=data[0].authority\r\n            }\r\n        }))\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${props.threadId}/post`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let post of data) {\r\n                    result.push(<Post title={post.text} author={post.login} createDate={post.createDate} onClick={() => {deletePost(post.id)}} postRole={role} />)\r\n                }\r\n                setTopics(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            <div onClick={closeSection}>\r\n                <Item title={props.sectionName} type=\"section\" />\r\n            </div>\r\n            <div className=\"threads\">\r\n                <div onClick={closeThread}>\r\n                    <Item title={props.threadName} description={props.threadDescription} author={props.threadAuthor} type=\"topic\" />\r\n                </div>\r\n                <div className=\"topics\">\r\n                    {topics}\r\n                </div>\r\n            </div>\r\n            {\r\n                (() => {\r\n                    console.log(props.userLogged)\r\n                    if (props.userLogged != 'unknown') {\r\n                        return (\r\n                            <div id=\"addThreadForm\">\r\n                                <textarea id=\"post_text\"></textarea>\r\n                                <button type=\"button\" onClick={addPost}>Dodaj odpowiedź</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topics\r\n","import '../App.css'\r\nimport React, { useState } from 'react';\r\n\r\nfunction RegisterForm() {\r\n\r\n    const registerUser = () => {\r\n        let data = {\r\n            \"username\": document.getElementById(\"login_field\").value,\r\n            \"password\": document.getElementById(\"password_field\").value,\r\n            \"email\": document.getElementById(\"email_form\").value\r\n        }\r\n\r\n        \r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/register\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json().then(data => {\r\n                if (response.status === 200) {\r\n                document.location.reload()\r\n                alert(\"Możesz się zalogować\")\r\n            } else {\r\n                alert(response.status)\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div id=\"registerForm\">\r\n            <input type=\"text\" id=\"login_field\" placeholder=\"login\" />\r\n            <input type=\"password\" id=\"password_field\" placeholder=\"hasło\" />\r\n            <input type=\"text\" id=\"email_form\" placeholder=\"email\" />\r\n            <button type=\"button\" onClick={registerUser}>Zarejestruj</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nvar role\r\n\r\nfunction Sections(props) {\r\n    const [sections, setSections] = useState([])\r\n\r\n    const deleteSection = (id) => {\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/section/${id}`, {\r\n            method: 'DELETE',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            },\r\n        }).then(res =>{\r\n            if(!res.ok)\r\n            {\r\n                alert(\"błąd\")\r\n            }\r\n            else\r\n            {\r\n            document.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    const openSection = (id) => {\r\n        fetch('https://projekt-pp-backend.herokuapp.com/section/' + id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setSectionId(id)\r\n                props.setPage(props.PageEnum.section)\r\n                props.setSectionName(data.name)\r\n            }\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/authorities`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                role=data[0].authority\r\n            }\r\n        }))\r\n\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/section/\", {\r\n            method: 'GET'\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let section of data) {\r\n                    result.push(<div onClick={() => openSection(section.id)}><Item title={section.name}  onClick={()=>deleteSection(section.id)} postRole={role} type=\"sections\" /></div>)\r\n                }\r\n                setSections(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            {sections}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sections\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction PopularItem(props) {\r\n    return (\r\n        <div className=\"popularItem\" onClick={props.onClick}>\r\n            <div>{props.title}</div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default PopularItem\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\nimport Post from './Post'\r\n\r\nfunction OpenedThreadPage(props) {\r\n\r\n\r\n    const addPost = () => {\r\n        let json = {\r\n            \"text\": document.getElementById(\"post_text\").value\r\n        }\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${props.threadId}/post`, {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            },\r\n            body: JSON.stringify(json)\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n\r\n                fetch(`https://projekt-pp-backend.herokuapp.com/topic/${props.threadId}/post`, {\r\n                    method: 'GET',\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n                    }\r\n                }).then(res => res.json().then(data => {\r\n                    if (res.status == 200) {\r\n                        let result = []\r\n                        \r\n                        for (let post of data) {\r\n                            result.push(<Post title={post.text} author={post.login} createDate={post.createDate} />)\r\n                        }\r\n                        props.setPopularPosts(result)\r\n                    }\r\n                }))\r\n\r\n            } else {\r\n                alert(res.status)\r\n            }\r\n        }))\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n           \r\n            <div className=\"threads\">\r\n                <div >\r\n                    <Item title={props.threadName} description={props.threadDescription} author={props.threadAuthor} type=\"topic\" />\r\n                </div>\r\n                <div className=\"topics\">\r\n                    {props.popularPosts}\r\n                </div>\r\n            </div>\r\n            {\r\n                (() => {\r\n                    console.log(props.userLogged)\r\n                    if (props.userLogged != 'unknown') {\r\n                        return (\r\n                            <div id=\"addThreadForm\">\r\n                                <textarea id=\"post_text\"></textarea>\r\n                                <button type=\"button\" onClick={addPost}>Dodaj odpowiedź</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenedThreadPage\r\n","import './Sidebar.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { isExpired, decodeToken } from 'react-jwt'\r\nimport { getCookie, setCookie } from '../libraries/Cookie'\r\nimport PopularItem from './PopularItem'\r\nimport Post from './Post'\r\nimport Item from './Item'\r\nimport OpenedThreadPage from './OpenedThreadPage'\r\nimport { WindowsBalloon } from 'node-notifier'\r\n\r\nvar role\r\n\r\nfunction Sidebar(props) {\r\n    const [logged, setLogged] = useState(getCookie(\"jwt\"))\r\n    const [login_button_text, setLoginButtonText] = useState(\"Zaloguj\")\r\n    const username = ((logged) ? decodeToken(getCookie(\"jwt\")).sub : \"unknown\")\r\n    const [threads, setThreads] = useState([])\r\n\r\n    const deletePost = (id, threadId)=>{\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${threadId}/post/${id}`, {\r\n            method: 'DELETE',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            },\r\n        }).then(res =>{\r\n            if(!res.ok)\r\n            {\r\n                alert(\"błąd\")\r\n            }\r\n            else\r\n            {\r\n            document.location.reload();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.setUserLogged(username)\r\n        getPopularTopics()\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/authorities`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                role=data[0].authority\r\n            }\r\n        }))\r\n    })\r\n\r\n    const logout = () => {\r\n        setCookie(\"jwt\", \"\", -1)\r\n        document.location.reload()\r\n    }\r\n\r\n    const openAddThreadForm = () => {\r\n        props.setPage(props.PageEnum.add_thread)\r\n    }\r\n\r\n    const openAddSectionForm = () => {\r\n        props.setPage(props.PageEnum.add_section)\r\n    }\r\n\r\n    const openRegisterPage = () => {\r\n        props.setPage(props.PageEnum.register)\r\n    }\r\n\r\n    const getPopularTopics = () => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/mostPopularTopics/1\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                let count = 0\r\n                for (let thread of data) {\r\n                    count++\r\n                    result.push(\r\n                        <div >\r\n                            <PopularItem title={thread.title} onClick={()=>openThread(thread.title, thread.login, thread.description, thread.id)}  />\r\n                        </div>\r\n                        )\r\n                    if(count>4)\r\n                        break\r\n                }\r\n                setThreads(result)\r\n            }\r\n        }))\r\n    }\r\n\r\n\r\n    const openThread = (title, login , description, threadId) => {\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${threadId}/post`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                \r\n                for (let post of data) {\r\n                    result.push(<Post title={post.text} author={post.login} createDate={post.createDate} onClick={() => {deletePost(post.id,threadId)}} />)\r\n                }\r\n                props.setPopularPosts(result)\r\n            }\r\n        }))\r\n\r\n        props.setThreadName(title)\r\n        props.setThreadDescription(description)\r\n        props.setThreadAuthor(login)\r\n        props.setThreadId(threadId)\r\n        props.setPage(props.PageEnum.opened_thread)\r\n    }\r\n\r\n    const signin = async () => {\r\n        setLoginButtonText(\"Logowanie...\")\r\n\r\n        let data = {\r\n            \"username\": document.getElementById(\"login_field\").value,\r\n            \"password\": document.getElementById(\"password_field\").value\r\n        }\r\n\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/login\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json().then(data => {\r\n            if (response.status === 200) {\r\n                setCookie(\"jwt\", data.jwt, 10)\r\n                document.location.reload()\r\n            } else {\r\n                setLoginButtonText(`Błąd ${response.status}`)\r\n                setTimeout(() => { setLoginButtonText('Zaloguj') }, 3000);\r\n            }\r\n        }))\r\n        \r\n        \r\n\r\n        \r\n    }\r\n\r\n    const returnToHomePage = () => {\r\n        props.setPage(props.PageEnum.home)\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            {(() => {\r\n                if (props.page != props.PageEnum.register) {\r\n                    if (logged) return (\r\n                        <div id=\"login_form\">\r\n                            <p>@{username}</p>\r\n                            <button type=\"button\" onClick={logout}>Wyloguj</button>\r\n                        </div>\r\n                    ) \r\n                    else return (\r\n                        <div id=\"login_form\">\r\n                            <input type=\"text\" id=\"login_field\" placeholder=\"login\" /><br />\r\n                            <input type=\"password\" id=\"password_field\" placeholder=\"hasło\" />\r\n                            <button type=\"button\" onClick={signin}>{login_button_text}</button>\r\n                            <button type=\"button\" onClick={openRegisterPage}>Zarejestruj</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            })()}\r\n            {/* <input type=\"text\" id=\"search_form\" placeholder=\"wyszukaj\" /> */}\r\n            <div style={{marginTop: 100 + 'px', height: 1 + 'px'}}></div>\r\n            <button style={{marginTop: 100 + 'px!important'}} type=\"button\" className=\"wide_button\" onClick={getPopularTopics}>Najpopularniejsze tematy</button>\r\n            \r\n            <div className=\"popularThreads\">\r\n                {threads}\r\n            </div>\r\n            \r\n            {\r\n            (() => {\r\n                if (username !== 'unknown') {\r\n                    return (\r\n                        <button type=\"button\" className=\"wide_button\" onClick={openAddThreadForm}>Dodaj temat</button>\r\n                    )\r\n                }\r\n            })()\r\n            }\r\n\r\n{\r\n            (() => {\r\n                if (role===\"ROLE_ADMIN\") {\r\n                    return (\r\n                        <button type=\"button\" className=\"wide_button\" onClick={openAddSectionForm}>Dodaj sekcje</button>\r\n                    )\r\n                }\r\n            })()\r\n            }\r\n            <button type=\"button\" className=\"wide_button\" onClick={returnToHomePage}>Strona Główna</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\nimport { decodeToken } from 'react-jwt'\r\n\r\nvar role\r\n\r\nfunction Threads(props) {\r\n    const [threads, setThreads] = useState([])\r\n    \r\n    const deleteTopic = (id) => {\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/section/${props.sectionId}/topic/${id}`, {\r\n            method: 'DELETE',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            },\r\n        }).then(res =>{\r\n            if(!res.ok)\r\n            {\r\n                alert(\"błąd\")\r\n            }\r\n            else\r\n            {\r\n            document.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    const closeSection = () => {\r\n        props.setPage(props.PageEnum.home)\r\n        props.setSectionName(\"Ładowanie...\")\r\n    }\r\n\r\n    const openThread = (id) => {\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/section/${props.sectionId}/topic/${id}`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setThreadId(id)\r\n                props.setPage(props.PageEnum.thread)\r\n                props.setThreadName(data.title)\r\n                props.setThreadDescription(data.description)\r\n                props.setThreadAuthor(data.login)\r\n            }\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        \r\n        fetch(`https://projekt-pp-backend.herokuapp.com/authorities`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                role=data[0].authority\r\n            }\r\n        }))\r\n\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/section/${props.sectionId}/topic`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let thread of data) {\r\n                    result.push(\r\n                        <div onClick={() => openThread(thread.id)}>\r\n                            <Item title={thread.title} closeSection={closeSection} description={thread.description} author={thread.login} postRole={role} onClick={() => {deleteTopic(thread.id)}} type=\"topic\" />\r\n                        </div>\r\n                        )\r\n                }\r\n                setThreads(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            <div onClick={closeSection}>\r\n                <Item title={props.sectionName} type=\"section\" />\r\n            </div>\r\n            <div className=\"threads\">\r\n                {threads}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Threads\r\n","import './App.css'\r\nimport React, { useState } from 'react'\r\nimport AddThreadForm from './components/AddThreadForm'\r\nimport AddSectionForm from './components/AddSectionForm'\r\nimport HerokuWait from './components/HerokuWait'\r\nimport Posts from './components/Posts'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport Sections from './components/Sections'\r\nimport Sidebar from './components/Sidebar'\r\nimport Threads from './components/Threads'\r\nimport OpenedThreadPage from './components/OpenedThreadPage'\r\n\r\n\r\nfunction App() {\r\n  const PageEnum = Object.freeze({\r\n    \"heroku_wait\": 0,\r\n    \"home\": 1,\r\n    \"register\": 2,\r\n    \"section\": 3,\r\n    \"thread\": 4,\r\n    \"add_thread\": 5,\r\n    \"add_section\": 6,\r\n    \"opened_thread\": 7\r\n  })\r\n\r\n  const [page, setPage] = useState(PageEnum.heroku_wait)\r\n  const [sectionId, setSectionId] = useState(0)\r\n  const [sectionName, setSectionName] = useState(\"Wczytywanie...\")\r\n  const [threadName, setThreadName] = useState(\"Wczytywanie...\")\r\n  const [threadDescription, setThreadDescription] = useState(\"Wczytywanie...\")\r\n  const [threadAuthor, setThreadAuthor] = useState(\"Wczytywanie...\")\r\n  const [threadId, setThreadId] = useState(0)\r\n  const [userLogged, setUserLogged] = useState('unknown')\r\n  const [popularPosts, setPopularPosts] = useState([])\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Sidebar page={page} setPage={setPage} PageEnum={PageEnum} setUserLogged={setUserLogged} setThreadName={setThreadName} setThreadDescription={setThreadDescription}\r\n                  setThreadAuthor={setThreadAuthor} setThreadId={setThreadId} setPopularPosts={setPopularPosts}/>\r\n      <div className=\"container\">\r\n        {        \r\n          (() => {\r\n            switch (page) {\r\n              case PageEnum.heroku_wait:\r\n                return <HerokuWait setPage={setPage} PageEnum={PageEnum} />\r\n              case PageEnum.home:\r\n                return <Sections setPage={setPage} PageEnum={PageEnum} setSectionId={setSectionId} setSectionName={setSectionName} />\r\n              case PageEnum.register:\r\n                return <RegisterForm />\r\n              case PageEnum.section:\r\n                return <Threads setPage={setPage} PageEnum={PageEnum} sectionName={sectionName} sectionId={sectionId}\r\n                  setSectionName={setSectionName} setThreadName={setThreadName} setThreadDescription={setThreadDescription}\r\n                  setThreadAuthor={setThreadAuthor} setThreadId={setThreadId} />\r\n              case PageEnum.thread:\r\n                return <Posts setPage={setPage} PageEnum={PageEnum} sectionName={sectionName}\r\n                  setSectionName={setSectionName} threadName={threadName} threadDescription={threadDescription}\r\n                  threadAuthor={threadAuthor} threadId={threadId} userLogged={userLogged} />\r\n              case PageEnum.add_thread:\r\n                return <AddThreadForm />\r\n              case PageEnum.add_section:\r\n                return <AddSectionForm />\r\n              case PageEnum.opened_thread:\r\n                  return <OpenedThreadPage setPage={setPage} PageEnum={PageEnum} setThreadName={setThreadName} setThreadDescription={setThreadDescription}\r\n                  setThreadAuthor={setThreadAuthor} setThreadId={setThreadId} threadName={threadName} threadDescription={threadDescription}\r\n                  threadAuthor={threadAuthor} threadId={threadId} userLogged={userLogged} popularPosts={popularPosts} setPopularPosts={setPopularPosts}/>\r\n              \r\n\r\n            }\r\n          })()\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}