{"version":3,"sources":["components/AddThreadForm.js","components/HerokuWait.js","components/Item.js","components/Post.js","components/Posts.js","components/RegisterForm.js","components/Sections.js","components/PopularItem.js","components/Sidebar.js","components/Threads.js","App.js","reportWebVitals.js","index.js","libraries/Cookie.js"],"names":["AddThreadForm","props","useState","sections","setSections","useEffect","fetch","method","credentials","headers","getCookie","then","res","json","data","status","result","section","push","value","id","name","type","placeholder","onClick","selectElement","document","getElementById","alert","selectedValue","HerokuWait","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","setPage","PageEnum","home","open","send","className","Item","title","author","description","Post","createDate","slice","replace","Topics","topics","setTopics","threadId","post","text","login","setSectionName","sectionName","threadName","threadDescription","threadAuthor","RegisterForm","body","JSON","stringify","response","location","reload","Sections","setSectionId","PopularItem","Sidebar","logged","login_button_text","setLoginButtonText","username","decodeToken","sub","threads","setThreads","logout","setCookie","openRegisterPage","register","openThread","signin","a","jwt","page","count","thread","add_thread","Threads","closeSection","sectionId","setThreadId","setThreadName","setThreadDescription","setThreadAuthor","authorId","App","Object","freeze","heroku_wait","Posts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports","cname","ca","decodeURIComponent","cookie","split","i","length","c","charAt","substring","indexOf","cvalue","exhours","d","Date","setTime","getTime","expires","toUTCString"],"mappings":"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","file":"static/js/main.13a25ec9.chunk.js","sourcesContent":["import { render } from '@testing-library/react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction AddThreadForm(props) {\r\n    const [sections, setSections] = useState([])\r\n    const [selectedValue, setSelectedValue] = useState([]);\r\n \r\n    const handleChange = e => {\r\n     setSelectedValue(e.value);\r\n    }\r\n   \r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/section\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let section of data) {\r\n                    result.push(<option value={section.id}>{section.name}</option>)\r\n                }\r\n                setSections(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    \r\n    const addTopic = () =>\r\n    {\r\n        let selectElement = document.getElementById(\"section\")\r\n        alert(selectElement.selectedValue)\r\n    }\r\n\r\n    return (\r\n        <div id=\"addThreadForm\">\r\n            <select id=\"section\" name=\"sections\">\r\n            {sections}\r\n            </select>\r\n            <input type=\"text\" id=\"topic_filed\" placeholder=\"Nazwa tematu\" />\r\n            <textarea></textarea>\r\n            <button type=\"button\" onClick={addTopic}>Dodaj wątek</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AddThreadForm\r\n","import './HerokuWait.css'\r\nimport React from 'react';\r\n\r\nfunction HerokuWait(props) {\r\n    const url = \"https://projekt-pp-backend.herokuapp.com/swagger-ui.html\"\r\n\r\n    var xhttp = new XMLHttpRequest()\r\n    xhttp.onreadystatechange = function() {\r\n        if (this.readyState == 4) {\r\n            props.setPage(props.PageEnum.home)\r\n        }\r\n    }\r\n\r\n    xhttp.open(\"GET\", url, true);\r\n    xhttp.send();\r\n\r\n    return (\r\n        <div id=\"HerokuWait\">\r\n            <div id=\"container\">\r\n                <div id=\"box\">\r\n                    <div className=\"lds-dual-ring\"></div>\r\n                    <h1>Page is being loaded...</h1>\r\n                    <h3>Server is starting, this can take up to one minute...</h3>\r\n                    <h5>Servers are going to sleep automatically when no load is detected to save server resources.</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HerokuWait\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Item(props) {\r\n    return (\r\n        <div className=\"item\">\r\n            <div>{props.title}</div>\r\n            <div className=\"username\">{props.author && '@' + props.author}</div>\r\n            <div className=\"info\">{props.description}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction Post(props) {\r\n    const getDate = () => {\r\n        return props.createDate.slice(0, 19).replace('T', ' ')\r\n    }\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"username\">\r\n                @{props.author}\r\n            </div>\r\n            <div className=\"info\">{getDate()}</div>\r\n            {props.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport Post from './Post'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Topics(props) {\r\n    const [topics, setTopics] = useState([])\r\n\r\n    const closeSection = () => {\r\n        props.setPage(props.PageEnum.home)\r\n        props.setSectionName(\"Ładowanie...\")\r\n    }\r\n\r\n    const closeThread = () => {\r\n        props.setPage(props.PageEnum.section)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/topic/${props.threadId}/post`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let post of data) {\r\n                    result.push(<Post title={post.text} author={post.author.login} createDate={post.createDate} />)\r\n                }\r\n                setTopics(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            <div onClick={closeSection}>\r\n                <Item title={props.sectionName} />\r\n            </div>\r\n            <div className=\"threads\">\r\n                <div onClick={closeThread}>\r\n                    <Item title={props.threadName} description={props.threadDescription} author={props.threadAuthor} />\r\n                </div>\r\n                <div className=\"topics\">\r\n                    {topics}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Topics\r\n","import '../App.css'\r\nimport React, { useState } from 'react';\r\n\r\nfunction RegisterForm() {\r\n\r\n    const registerUser = () => {\r\n        let data = {\r\n            \"username\": document.getElementById(\"login_field\").value,\r\n            \"password\": document.getElementById(\"password_field\").value,\r\n            \"email\": document.getElementById(\"email_form\").value\r\n        }\r\n\r\n        \r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/user\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json().then(data => {\r\n                if (response.status === 200) {\r\n                document.location.reload()\r\n                alert(\"Możesz się zalogować\")\r\n            } else {\r\n                alert(response.status)\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div id=\"registerForm\">\r\n            <input type=\"text\" id=\"login_field\" placeholder=\"login\" />\r\n            <input type=\"password\" id=\"password_field\" placeholder=\"hasło\" />\r\n            <input type=\"text\" id=\"email_form\" placeholder=\"email\" />\r\n            <button type=\"button\" onClick={registerUser}>Zarejestruj</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Sections(props) {\r\n    const [sections, setSections] = useState([])\r\n\r\n    const openSection = (id) => {\r\n        fetch('https://projekt-pp-backend.herokuapp.com/section/' + id, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setSectionId(id)\r\n                props.setPage(props.PageEnum.section)\r\n                props.setSectionName(data.name)\r\n            }\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/section\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let section of data) {\r\n                    result.push(<div onClick={() => openSection(section.id)}><Item title={section.name} /></div>)\r\n                }\r\n                setSections(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            {sections}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sections\r\n","import '../App.css'\r\nimport React, { useState } from 'react'\r\n\r\nfunction PopularItem(props) {\r\n    return (\r\n        <div className=\"popularItem\">\r\n            <div>{props.title}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularItem\r\n","import './Sidebar.css'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { isExpired, decodeToken } from 'react-jwt'\r\nimport { getCookie, setCookie } from '../libraries/Cookie'\r\nimport PopularItem from './PopularItem'\r\nimport Post from './Post'\r\n\r\nfunction Sidebar(props) {\r\n    const [logged, setLogged] = useState(getCookie(\"jwt\"))\r\n    const [login_button_text, setLoginButtonText] = useState(\"Zaloguj\")\r\n    const username = ((logged) ? decodeToken(getCookie(\"jwt\")).sub : \"unknown\")\r\n    const [threads, setThreads] = useState([])\r\n\r\n    const logout = () => {\r\n        setCookie(\"jwt\", \"\", -1)\r\n        document.location.reload()\r\n    }\r\n\r\n    const openAddThreadForm = () => {\r\n        props.setPage(props.PageEnum.add_thread)\r\n    }\r\n\r\n    const openRegisterPage = () => {\r\n        props.setPage(props.PageEnum.register)\r\n    }\r\n\r\n    const getPopularTopics = () => {\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/mostPopularTopics/1\", {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                let count = 0\r\n                for (let thread of data) {\r\n                    count++\r\n                    result.push(\r\n                        <div onClick={() => openThread(thread.id)}>\r\n                            <PopularItem title={thread.title}   />\r\n                        </div>\r\n                        )\r\n                    if(count>4)\r\n                        break\r\n                }\r\n                setThreads(result)\r\n            }\r\n        }))\r\n    }\r\n    const openThread = (id) => {\r\n        \r\n    }\r\n\r\n    const signin = async () => {\r\n        setLoginButtonText(\"Logowanie...\")\r\n\r\n        let data = {\r\n            \"username\": document.getElementById(\"login_field\").value,\r\n            \"password\": document.getElementById(\"password_field\").value\r\n        }\r\n\r\n        fetch(\"https://projekt-pp-backend.herokuapp.com/login\", {\r\n            method: 'POST',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }).then(response => response.json().then(data => {\r\n                if (response.status === 200) {\r\n                setCookie(\"jwt\", data.jwt, 10)\r\n                document.location.reload()\r\n            } else {\r\n                alert(response.status)\r\n            }\r\n        }))\r\n    }\r\n\r\n    const returnToHomePage = () => {\r\n        props.setPage(props.PageEnum.home)\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            {(() => {\r\n                if (props.page != props.PageEnum.register) {\r\n                    if (logged) return (\r\n                        <div id=\"login_form\">\r\n                            <p>@{username}</p>\r\n                            <button type=\"button\" onClick={logout}>Wyloguj</button>\r\n                        </div>\r\n                    ) \r\n                    else return (\r\n                        <div id=\"login_form\">\r\n                            <input type=\"text\" id=\"login_field\" placeholder=\"login\" /><br />\r\n                            <input type=\"password\" id=\"password_field\" placeholder=\"hasło\" />\r\n                            <button type=\"button\" onClick={signin}>{login_button_text}</button>\r\n                            <button type=\"button\" onClick={openRegisterPage}>Zarejestruj</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            })()}\r\n            <input type=\"text\" id=\"search_form\" placeholder=\"wyszukaj\" />\r\n            <button type=\"button\" className=\"wide_button\" onClick={getPopularTopics}>Najpopularniejsze tematy</button>\r\n            \r\n            <div className=\"popularThreads\">\r\n                {threads}\r\n            </div>\r\n            \r\n            <button type=\"button\" className=\"wide_button\" onClick={openAddThreadForm}>Dodaj wątek</button>\r\n            <button type=\"button\" className=\"wide_button\" onClick={returnToHomePage}>Strona Główna</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState, useEffect } from 'react'\r\nimport Item from './Item'\r\nimport { getCookie } from '../libraries/Cookie'\r\n\r\nfunction Threads(props) {\r\n    const [threads, setThreads] = useState([])\r\n\r\n    const closeSection = () => {\r\n        props.setPage(props.PageEnum.home)\r\n        props.setSectionName(\"Ładowanie...\")\r\n    }\r\n\r\n    const openThread = (id) => {\r\n        fetch('https://projekt-pp-backend.herokuapp.com/topic/' + id, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                props.setThreadId(id)\r\n                props.setPage(props.PageEnum.thread)\r\n                props.setThreadName(data.title)\r\n                props.setThreadDescription(data.description)\r\n                props.setThreadAuthor(data.authorId)\r\n            }\r\n        }))\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`https://projekt-pp-backend.herokuapp.com/section/${props.sectionId}/topic`, {\r\n            method: 'GET',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + getCookie(\"jwt\")\r\n            }\r\n        }).then(res => res.json().then(data => {\r\n            if (res.status == 200) {\r\n                let result = []\r\n                for (let thread of data) {\r\n                    result.push(\r\n                        <div onClick={() => openThread(thread.id)}>\r\n                            <Item title={thread.title} closeSection={closeSection} description={thread.description} author={thread.authorId} />\r\n                        </div>\r\n                        )\r\n                }\r\n                setThreads(result)\r\n            }\r\n        }))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sections\">\r\n            <div onClick={closeSection}>\r\n                <Item title={props.sectionName}/>\r\n            </div>\r\n            <div className=\"threads\">\r\n                {threads}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Threads\r\n","import './App.css'\r\nimport React, { useState } from 'react'\r\nimport AddThreadForm from './components/AddThreadForm'\r\nimport HerokuWait from './components/HerokuWait'\r\nimport Posts from './components/Posts'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport Sections from './components/Sections'\r\nimport Sidebar from './components/Sidebar'\r\nimport Threads from './components/Threads'\r\n\r\nfunction App() {\r\n  const PageEnum = Object.freeze({\r\n    \"heroku_wait\": 0,\r\n    \"home\": 1,\r\n    \"register\": 2,\r\n    \"section\": 3,\r\n    \"thread\": 4,\r\n    \"add_thread\": 5\r\n  })\r\n\r\n  const [page, setPage] = useState(PageEnum.heroku_wait)\r\n  const [sectionId, setSectionId] = useState(0)\r\n  const [sectionName, setSectionName] = useState(\"Wczytywanie...\")\r\n  const [threadName, setThreadName] = useState(\"Wczytywanie...\")\r\n  const [threadDescription, setThreadDescription] = useState(\"Wczytywanie...\")\r\n  const [threadAuthor, setThreadAuthor] = useState(\"Wczytywanie...\")\r\n  const [threadId, setThreadId] = useState(0)\r\n\r\n  return (\r\n    <div id=\"app\">\r\n      <Sidebar page={page} setPage={setPage} PageEnum={PageEnum} />\r\n      <div className=\"container\">\r\n        {        \r\n          (() => {\r\n            switch (page) {\r\n              case PageEnum.heroku_wait:\r\n                return <HerokuWait setPage={setPage} PageEnum={PageEnum} />\r\n              case PageEnum.home:\r\n                return <Sections setPage={setPage} PageEnum={PageEnum} setSectionId={setSectionId} setSectionName={setSectionName} />\r\n              case PageEnum.register:\r\n                return <RegisterForm />\r\n              case PageEnum.section:\r\n                return <Threads setPage={setPage} PageEnum={PageEnum} sectionName={sectionName} sectionId={sectionId}\r\n                  setSectionName={setSectionName} setThreadName={setThreadName} setThreadDescription={setThreadDescription}\r\n                  setThreadAuthor={setThreadAuthor} setThreadId={setThreadId} />\r\n              case PageEnum.thread:\r\n                return <Posts setPage={setPage} PageEnum={PageEnum} sectionName={sectionName}\r\n                  setSectionName={setSectionName} threadName={threadName} threadDescription={threadDescription}\r\n                  threadAuthor={threadAuthor} threadId={threadId} />\r\n              case PageEnum.add_thread:\r\n                return <AddThreadForm />\r\n            }\r\n          })()\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports.getCookie = (cname) => {\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) == ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) == 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nmodule.exports.setCookie = (cname, cvalue, exhours) => {\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exhours*60*60*1000));\r\n    var expires = \"expires=\"+ d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n}\r\n"],"sourceRoot":""}